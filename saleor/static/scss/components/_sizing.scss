@each $key, $value in (
	'padding' : space-around,
	'center'  : center,
	'start'   : flex-start,
	'end'     : flex-end,
	'space'   : space-around,
	'even'    : space-evenly,
	'between' : space-between
){
	.grid.grid-content_#{$key} {
		justify-content: $value;
	}
}

@each $key, $value in (
	'stretch' : stretch,
	'center'  : center,
	'start'   : flex-start,
	'end'     : flex-end,
	'space'   : space-around,
	'even'    : space-evenly
){
	.grid.grid-align_#{$key} {
		align-items: $value;
	}
}

.grid {
	display: flex;

	.grid .grid-col {
		flex: 1 1 auto;
	}
	&.grid-wrap {
		flex-wrap: wrap;
		align-items: flex-start;
	}
	&.grid-gutters .grid-col:first-child,
	&.grid-gutters .grid-col,
	&.grid-gutters div:first-child,
	&.grid-gutters div {
		padding-right: 0.75rem;
	}
	&.grid-gutters .grid-col:last-child,
	&.grid-gutters .grid-col,
	&.grid-gutters div:last-child,
	&.grid-gutters div {
		padding-left: 0.75rem;
	}

	/* Assume custom sizing here, no flex time */
	.grid [class*="col-"] {
		flex: none;
	}
}
/* Custom widths here */
$maxWidth: 100%;
@for $i from 1 through 12 {
	.grid .grid-col-#{$i} {
		flex: 0 0 ($i / 12 * $maxWidth);
		width: ($i / 12 * $maxWidth);
	}
}
.align-center {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	justify-content: center;
	-ms-flex-line-pack: center;
	align-content: center;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	margin: auto;
}